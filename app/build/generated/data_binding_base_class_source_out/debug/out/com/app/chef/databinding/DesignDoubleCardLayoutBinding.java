// Generated by view binder compiler. Do not edit!
package com.app.chef.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.chef.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DesignDoubleCardLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText etField1;

  @NonNull
  public final EditText etField2;

  @NonNull
  public final EditText etField3;

  @NonNull
  public final EditText etField4;

  @NonNull
  public final TextView field1;

  @NonNull
  public final TextView field2;

  @NonNull
  public final TextView field3;

  @NonNull
  public final TextView field4;

  @NonNull
  public final TextView tvType1;

  private DesignDoubleCardLayoutBinding(@NonNull LinearLayout rootView, @NonNull EditText etField1,
      @NonNull EditText etField2, @NonNull EditText etField3, @NonNull EditText etField4,
      @NonNull TextView field1, @NonNull TextView field2, @NonNull TextView field3,
      @NonNull TextView field4, @NonNull TextView tvType1) {
    this.rootView = rootView;
    this.etField1 = etField1;
    this.etField2 = etField2;
    this.etField3 = etField3;
    this.etField4 = etField4;
    this.field1 = field1;
    this.field2 = field2;
    this.field3 = field3;
    this.field4 = field4;
    this.tvType1 = tvType1;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DesignDoubleCardLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DesignDoubleCardLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.design_double_card_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DesignDoubleCardLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_field1;
      EditText etField1 = ViewBindings.findChildViewById(rootView, id);
      if (etField1 == null) {
        break missingId;
      }

      id = R.id.et_field2;
      EditText etField2 = ViewBindings.findChildViewById(rootView, id);
      if (etField2 == null) {
        break missingId;
      }

      id = R.id.et_field3;
      EditText etField3 = ViewBindings.findChildViewById(rootView, id);
      if (etField3 == null) {
        break missingId;
      }

      id = R.id.et_field4;
      EditText etField4 = ViewBindings.findChildViewById(rootView, id);
      if (etField4 == null) {
        break missingId;
      }

      id = R.id.field1;
      TextView field1 = ViewBindings.findChildViewById(rootView, id);
      if (field1 == null) {
        break missingId;
      }

      id = R.id.field2;
      TextView field2 = ViewBindings.findChildViewById(rootView, id);
      if (field2 == null) {
        break missingId;
      }

      id = R.id.field3;
      TextView field3 = ViewBindings.findChildViewById(rootView, id);
      if (field3 == null) {
        break missingId;
      }

      id = R.id.field4;
      TextView field4 = ViewBindings.findChildViewById(rootView, id);
      if (field4 == null) {
        break missingId;
      }

      id = R.id.tv_type1;
      TextView tvType1 = ViewBindings.findChildViewById(rootView, id);
      if (tvType1 == null) {
        break missingId;
      }

      return new DesignDoubleCardLayoutBinding((LinearLayout) rootView, etField1, etField2,
          etField3, etField4, field1, field2, field3, field4, tvType1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
